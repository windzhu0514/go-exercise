package main

import (
	"encoding/json"
	"fmt"
)

const (
	x = iota
	y
	z = "zz"
	k
	p = iota
	q
)

type AutoGenerated struct {
	Age      int      `json:"age"`
	Children []string `json:"children"`
	FavMovie string   `json:"fav.movie"`
	Friends  []struct {
		Age   int    `json:"age"`
		First string `json:"first"`
		Last  string `json:"last"`
	} `json:"friends"`
	Name struct {
		First bool   `json:"first"`
		Last  string `json:"last"`
	} `json:"name"`
}

func main() {
	jsonStr := `{"age":37,"children":["Sara","Alex","Jack"],"fav.movie":"Deer Hunter","friends":[{"age":44,"first":"Dale","last":"Murphy"},{"age":68,"first":"Roger","last":"Craig"},{"age":47,"first":"Jane","last":"Murphy"}],"name":{"first":true,"last":"Anderson"}}`
	var s AutoGenerated
	if err := json.Unmarshal([]byte(jsonStr), &s); err != nil {
		fmt.Println(err)
		return
	}

	jsonStr = `"dsfd"`
	var ss string
	if err := json.Unmarshal([]byte(jsonStr), &ss); err != nil {
		fmt.Println(err)
		return
	}
	fmt.Println(ss)
	// output:
	// dsfd

	jsonStr = `100`
	var sss int
	if err := json.Unmarshal([]byte(jsonStr), &sss); err != nil {
		fmt.Println(err)
		return
	}
	fmt.Println(sss)

	ssss := 100
	data, _ := json.Marshal(ssss)
	fmt.Println(string(data))
	// output:
	// 100

}

// output:
// 0 1 zz zz 4 5
