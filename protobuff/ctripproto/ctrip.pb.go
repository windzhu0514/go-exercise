// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ctrip.proto

/*
Package ctripproto is a generated protocol buffer package.

It is generated from these files:
	ctrip.proto

It has these top-level messages:
	Context
	Body
*/
package ctripproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Context struct {
	Key   string `protobuf:"bytes,1,opt,name=Key" json:"Key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=Value" json:"Value,omitempty"`
}

func (m *Context) Reset()                    { *m = Context{} }
func (m *Context) String() string            { return proto.CompactTextString(m) }
func (*Context) ProtoMessage()               {}
func (*Context) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Context) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Context) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type Body struct {
	Context        []*Context `protobuf:"bytes,1,rep,name=context" json:"context,omitempty"`
	DeviceToken    string     `protobuf:"bytes,2,opt,name=deviceToken" json:"deviceToken,omitempty"`
	Password       string     `protobuf:"bytes,3,opt,name=password" json:"password,omitempty"`
	ServiceVersion int32      `protobuf:"varint,4,opt,name=serviceVersion" json:"serviceVersion,omitempty"`
	UUID           string     `protobuf:"bytes,5,opt,name=uUID" json:"uUID,omitempty"`
	UserId         string     `protobuf:"bytes,6,opt,name=userId" json:"userId,omitempty"`
}

func (m *Body) Reset()                    { *m = Body{} }
func (m *Body) String() string            { return proto.CompactTextString(m) }
func (*Body) ProtoMessage()               {}
func (*Body) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Body) GetContext() []*Context {
	if m != nil {
		return m.Context
	}
	return nil
}

func (m *Body) GetDeviceToken() string {
	if m != nil {
		return m.DeviceToken
	}
	return ""
}

func (m *Body) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *Body) GetServiceVersion() int32 {
	if m != nil {
		return m.ServiceVersion
	}
	return 0
}

func (m *Body) GetUUID() string {
	if m != nil {
		return m.UUID
	}
	return ""
}

func (m *Body) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func init() {
	proto.RegisterType((*Context)(nil), "ctripproto.Context")
	proto.RegisterType((*Body)(nil), "ctripproto.Body")
}

func init() { proto.RegisterFile("ctrip.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 212 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x8e, 0xcd, 0x4a, 0xc5, 0x30,
	0x10, 0x85, 0x89, 0xfd, 0xd3, 0x29, 0x88, 0x8c, 0x22, 0xc1, 0x55, 0xe8, 0x42, 0xba, 0xb1, 0xa0,
	0xbe, 0x81, 0xba, 0x29, 0xee, 0x8a, 0x76, 0x5f, 0x9b, 0x59, 0x14, 0xa5, 0x29, 0x49, 0xaa, 0xf6,
	0x09, 0xef, 0x6b, 0x5d, 0x3a, 0xed, 0xfd, 0xe1, 0xee, 0xce, 0xf7, 0x65, 0xce, 0x21, 0x90, 0xb6,
	0xde, 0x76, 0x43, 0x31, 0x58, 0xe3, 0x0d, 0x02, 0x03, 0xe7, 0xec, 0x11, 0x92, 0x57, 0xd3, 0x7b,
	0xfa, 0xf7, 0x78, 0x05, 0xc1, 0x3b, 0x4d, 0x52, 0x28, 0x91, 0x5f, 0x54, 0x73, 0xc4, 0x1b, 0x88,
	0xea, 0xe6, 0x67, 0x24, 0x79, 0xc6, 0x6e, 0x81, 0x6c, 0x23, 0x20, 0x7c, 0x31, 0x7a, 0xc2, 0x07,
	0x48, 0xda, 0xa5, 0x2b, 0x85, 0x0a, 0xf2, 0xf4, 0xe9, 0xba, 0x38, 0x2c, 0x17, 0xeb, 0x6c, 0xb5,
	0xbb, 0x41, 0x05, 0xa9, 0xa6, 0xdf, 0xae, 0xa5, 0x0f, 0xf3, 0x4d, 0xfd, 0xba, 0x79, 0xac, 0xf0,
	0x0e, 0xce, 0x87, 0xc6, 0xb9, 0x3f, 0x63, 0xb5, 0x0c, 0xf8, 0x79, 0xcf, 0x78, 0x0f, 0x97, 0x8e,
	0xec, 0x7c, 0x5b, 0x93, 0x75, 0x9d, 0xe9, 0x65, 0xa8, 0x44, 0x1e, 0x55, 0x27, 0x16, 0x11, 0xc2,
	0xf1, 0xb3, 0x7c, 0x93, 0x11, 0xf7, 0x39, 0xe3, 0x2d, 0xc4, 0xa3, 0x23, 0x5b, 0x6a, 0x19, 0xb3,
	0x5d, 0xe9, 0x2b, 0xe6, 0x9f, 0x3e, 0x6f, 0x03, 0x00, 0x00, 0xff, 0xff, 0x1f, 0xc0, 0x05, 0x9f,
	0x1e, 0x01, 0x00, 0x00,
}
